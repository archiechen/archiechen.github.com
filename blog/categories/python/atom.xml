<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | 碎片]]></title>
  <link href="http://archiechen.github.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://archiechen.github.com/"/>
  <updated>2012-11-01T12:52:15+08:00</updated>
  <id>http://archiechen.github.com/</id>
  <author>
    <name><![CDATA[Archie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用doctest测试重载dict.sefdefault方法]]></title>
    <link href="http://archiechen.github.com/blog/2012/10/31/shi-yong-doctestce-shi-zhong-zai-dict-dot-sefdefaultfang-fa/"/>
    <updated>2012-10-31T17:58:00+08:00</updated>
    <id>http://archiechen.github.com/blog/2012/10/31/shi-yong-doctestce-shi-zhong-zai-dict-dot-sefdefaultfang-fa</id>
    <content type="html"><![CDATA[<p>为了避免字典中取出的值为None，通常会使用dict的setdefult方法：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">task</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
</span><span class='line'><span class="n">urls</span> <span class="o">=</span> <span class="n">task</span><span class="o">.</span><span class="n">setdefult</span><span class="p">(</span><span class="s">&#39;urls&#39;</span><span class="p">,[])</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
当字典中存在key时，无论value是否为None，setdefault方法都会忽略default值，直接返回value。为了避免这种情况，引入了一段重复代码逻辑，每次取一个key都要这样写：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">urls</span> <span class="o">=</span> <span class="n">task</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;urls&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">task</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;urls&quot;</span><span class="p">)</span> <span class="k">else</span> <span class="p">[]</span>
</span><span class='line'><span class="n">dirs</span> <span class="o">=</span> <span class="n">task</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;dirs&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">task</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;dirs&quot;</span><span class="p">)</span> <span class="k">else</span> <span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
代码可读性下降了，决定采用采用子类化内建类型的方式重构。重构后代码如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">task</span> <span class="o">=</span> <span class="n">alwaysdefaultdict</span><span class="p">(</span><span class="n">task</span><span class="p">)</span>
</span><span class='line'><span class="n">urls</span> <span class="o">=</span> <span class="n">task</span><span class="o">.</span><span class="n">setdefault</span><span class="p">(</span><span class="s">&#39;urls&#39;</span><span class="p">,[])</span>
</span><span class='line'><span class="n">dirs</span> <span class="o">=</span> <span class="n">task</span><span class="o">.</span><span class="n">setdefault</span><span class="p">(</span><span class="s">&#39;dirs&#39;</span><span class="p">,[])</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>重构过程中，先写doctest，alwaysdefaultdict.py文件内容如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;-&lt;</span><span class="n">em</span><span class="o">&gt;-</span> <span class="n">coding</span><span class="p">:</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span> <span class="o">-&lt;/</span><span class="n">em</span><span class="o">&gt;-&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">重载setdefault方法，当key存在，并且value为空字符串或None时，也会设置为defaultvalue。&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;blockquote&gt;&lt;blockquote&gt;&lt;blockquote&gt;&lt;p&gt;d = alwaysdefaultdict()</span>
</span><span class='line'><span class="s">d.setdefault(&#39;key&#39;,&#39;&#39;)</span>
</span><span class='line'><span class="s">&#39;&#39;</span>
</span><span class='line'><span class="s">d.setdefault(&#39;key&#39;,&#39;default&#39;)</span>
</span><span class='line'><span class="s">&#39;default&#39;</span>
</span><span class='line'><span class="s">d.get(&#39;key&#39;)</span>
</span><span class='line'><span class="s">&#39;default&#39;</span>
</span><span class='line'><span class="s">d.setdefault(&#39;key&#39;,&#39;newvalue&#39;)</span>
</span><span class='line'><span class="s">&#39;default&#39;</span>
</span><span class='line'><span class="s">d.get(&#39;no_key&#39;)</span>
</span><span class='line'><span class="s">d[&#39;newkey&#39;]=&#39;newvalue&#39;</span>
</span><span class='line'><span class="s">d.get(&#39;newkey&#39;)</span>
</span><span class='line'><span class="s">&#39;newvalue&#39;</span>
</span><span class='line'><span class="s">d[&#39;newkey&#39;]</span>
</span><span class='line'><span class="s">&#39;newvalue&#39;&lt;br/&gt;</span>
</span><span class='line'><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">alwaysdefaultdict</span><span class="p">(</span><span class="nb">dict</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">pass</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这时候执行测试的结果是：</p>

<pre><code>$ nosetests --with-doctest alwaysdefaultdict.py
F
......
Traceback (most recent call last):
......
Failed example:
    d.setdefault('key','default')
Expected:
    'default'
Got:
    ''
......
Failed example:
    d.get('key')
Expected:
    'default'
Got:
    ''
......
Failed example:
    d.setdefault('key','newvalue')
Expected:
    'default'
Got:
    ''
----------------------------------------------------------------------
Ran 1 test in 0.035s
</code></pre></blockquote></blockquote></blockquote>

<pre><code>FAILED (failures=1)
</code></pre>

<p>然后实现代码逻辑，最后代码如下：
<div><script src='https://gist.github.com/3986136.js?file='></script>
<noscript><pre><code>#-*- coding:utf-8 -*-
'''
    重载setdefault方法，当key存在，并且value为空字符串或None时，也会设置为defaultvalue。
&gt;&gt;&gt; d = alwaysdefaultdict()
&gt;&gt;&gt; d.setdefault('key','')
''
&gt;&gt;&gt; d.setdefault('key','default')
'default'
&gt;&gt;&gt; d.get('key')
'default'
&gt;&gt;&gt; d.setdefault('key','newvalue')
'default'
'''


class alwaysdefaultdict(dict):
    def setdefault(self, key, defaultvalue):
        if self.has_key(key):
            if self.get(key):
                return self.get(key)
            else:
                del self[key]
        return super(alwaysdefaultdict, self).setdefault(key, defaultvalue)
</code></pre></noscript></div>

执行doctest的结果：</p>

<pre><code>$ nosetests --with-doctest alwaysdefaultdict.py
.
----------------------------------------------------------------------
Ran 1 test in 0.096s

OK
</code></pre>
]]></content>
  </entry>
  
</feed>
